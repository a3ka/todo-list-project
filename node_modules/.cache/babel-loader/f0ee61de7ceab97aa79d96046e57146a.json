{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/ToDoList/todolist/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [tasks1, setTasks1] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }]);\n\n  const removeTask = newId => {\n    let filtered = tasks1.filter(el => el.id !== newId); //2\n\n    setTasks1(filtered);\n  };\n\n  const addTask = () => {\n    console.log('lll');\n    let newTask = {\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    };\n    setTasks1([newTask, ...tasks1]);\n  };\n\n  let [valueButton, setValueButton] = useState('All');\n\n  const tasksFilter = filterValue => {\n    setValueButton(filterValue);\n  };\n\n  let prokladka = tasks1;\n\n  if (valueButton === \"Active\") {\n    prokladka = tasks1.filter(el => !el.isDone);\n  }\n\n  if (valueButton === \"Completed\") {\n    prokladka = tasks1.filter(el => el.isDone);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: prokladka,\n      removeTask: removeTask,\n      tasksFilter: tasksFilter,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"tVYs2HS6jpEvNFjJLqsamcg1OeI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aka/Documents/ToDoList/todolist/src/App.tsx"],"names":["React","useState","Todolist","v1","App","tasks1","setTasks1","id","title","isDone","removeTask","newId","filtered","filter","el","addTask","console","log","newTask","valueButton","setValueButton","tasksFilter","filterValue","prokladka"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,EAAR,QAAiB,MAAjB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAC/B;AAACM,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,UAAlB;AAA8BC,IAAAA,MAAM,EAAE;AAAtC,GAD+B,EAE/B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,IAAlB;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAF+B,EAG/B;AAACF,IAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,IAAAA,KAAK,EAAE,SAAlB;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GAH+B,CAAD,CAAlC;;AAMA,QAAMC,UAAU,GAAIC,KAAD,IAAmB;AAClC,QAAIC,QAAQ,GAAGP,MAAM,CAACQ,MAAP,CAAeC,EAAD,IAAQA,EAAE,CAACP,EAAH,KAAUI,KAAhC,CAAf,CADkC,CACmB;;AACrDL,IAAAA,SAAS,CAACM,QAAD,CAAT;AACH,GAHD;;AAKA,QAAMG,OAAO,GAAG,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAIC,OAAO,GAAG;AAACX,MAAAA,EAAE,EAAEJ,EAAE,EAAP;AAAWK,MAAAA,KAAK,EAAE,UAAlB;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KAAd;AACAH,IAAAA,SAAS,CAAC,CAACY,OAAD,EAAU,GAAGb,MAAb,CAAD,CAAT;AACH,GAJD;;AAMA,MAAI,CAACc,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMoB,WAAW,GAAIC,WAAD,IAAyB;AACzCF,IAAAA,cAAc,CAACE,WAAD,CAAd;AACH,GAFD;;AAIA,MAAIC,SAAS,GAAGlB,MAAhB;;AACA,MAAIc,WAAW,KAAK,QAApB,EAA8B;AAC1BI,IAAAA,SAAS,GAAGlB,MAAM,CAACQ,MAAP,CAAcC,EAAE,IAAI,CAACA,EAAE,CAACL,MAAxB,CAAZ;AACH;;AACD,MAAIU,WAAW,KAAK,WAApB,EAAiC;AAC7BI,IAAAA,SAAS,GAAGlB,MAAM,CAACQ,MAAP,CAAcC,EAAE,IAAIA,EAAE,CAACL,MAAvB,CAAZ;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAE,eADX;AAEI,MAAA,KAAK,EAAEc,SAFX;AAGI,MAAA,UAAU,EAAEb,UAHhB;AAII,MAAA,WAAW,EAAEW,WAJjB;AAKI,MAAA,OAAO,EAAEN;AALb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA1CQX,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from \"uuid\";\r\n\r\n\r\nfunction App() {\r\n    let [tasks1, setTasks1] = useState([\r\n        {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"ReactJS\", isDone: false}\r\n    ])\r\n\r\n    const removeTask = (newId: string) => {\r\n        let filtered = tasks1.filter((el) => el.id !== newId)//2\r\n        setTasks1(filtered)\r\n    }\r\n\r\n    const addTask = () => {\r\n        console.log('lll')\r\n        let newTask = {id: v1(), title: \"HTML&CSS\", isDone: true}\r\n        setTasks1([newTask, ...tasks1])\r\n    }\r\n\r\n    let [valueButton, setValueButton] = useState('All')\r\n\r\n    const tasksFilter = (filterValue: string) => {\r\n        setValueButton(filterValue)\r\n    }\r\n\r\n    let prokladka = tasks1\r\n    if (valueButton === \"Active\") {\r\n        prokladka = tasks1.filter(el => !el.isDone)\r\n    }\r\n    if (valueButton === \"Completed\") {\r\n        prokladka = tasks1.filter(el => el.isDone)\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n                title={\"What to learn\"}\r\n                tasks={prokladka}\r\n                removeTask={removeTask}\r\n                tasksFilter={tasksFilter}\r\n                addTask={addTask}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}