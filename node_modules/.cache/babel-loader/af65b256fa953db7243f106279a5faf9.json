{"ast":null,"code":"import _slicedToArray from\"/home/aka/Documents/todo-list-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{IconButton,TextField}from\"@material-ui/core\";import AddIcon from'@material-ui/icons/Add';export var AddItemForm=function AddItemForm(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var addTask=function addTask(){var newTitle=title.trim();if(newTitle!==\"\"){props.callBack(newTitle);setTitle(\"\");}else{setError(\"Title is required\");}};var onChangeHandler=function onChangeHandler(e){setTitle(e.currentTarget.value);};var onKeyPressHandler=function onKeyPressHandler(e){setError(null);if(e.charCode===13){addTask();}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(TextField,{id:\"outlined-basic\",label:error,variant:\"outlined\",size:'small',value:title,onChange:onChangeHandler,onKeyPress:onKeyPressHandler,error:!!error}),/*#__PURE__*/React.createElement(IconButton,{style:{maxWidth:'15px',maxHeight:'15px',minWidth:'15px',minHeight:'15px'},onClick:addTask},/*#__PURE__*/React.createElement(AddIcon,null)));};","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/components/AddItemForm.tsx"],"names":["React","useState","IconButton","TextField","AddIcon","AddItemForm","props","title","setTitle","error","setError","addTask","newTitle","trim","callBack","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","maxWidth","maxHeight","minWidth","minHeight"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAA2CC,QAA3C,KAA0D,OAA1D,CACA,OAAQC,UAAR,CAAoBC,SAApB,KAAoC,mBAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAOA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAsB,eAErBL,QAAQ,CAAC,EAAD,CAFa,wCAExCM,KAFwC,eAEjCC,QAFiC,8BAGrBP,QAAQ,CAAgB,IAAhB,CAHa,yCAGxCQ,KAHwC,eAGjCC,QAHiC,eAK7C,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAIC,CAAAA,QAAQ,CAAGL,KAAK,CAACM,IAAN,EAAf,CACA,GAAID,QAAQ,GAAK,EAAjB,CAAqB,CACjBN,KAAK,CAACQ,QAAN,CAAeF,QAAf,EACAJ,QAAQ,CAAC,EAAD,CAAR,CACH,CAHD,IAGO,CACHE,QAAQ,CAAC,mBAAD,CAAR,CACH,CACJ,CARD,CAUA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAsC,CAC1DR,QAAQ,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACH,CAAD,CAAwC,CAC9DN,QAAQ,CAAC,IAAD,CAAR,CACA,GAAIM,CAAC,CAACI,QAAF,GAAe,EAAnB,CAAuB,CACnBT,OAAO,GACV,CACJ,CALD,CAOA,mBACI,4CAOI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,KAAK,CAAEF,KAAtC,CAA6C,OAAO,CAAC,UAArD,CAAgE,IAAI,CAAE,OAAtE,CACW,KAAK,CAAEF,KADlB,CAEW,QAAQ,CAAEQ,eAFrB,CAGW,UAAU,CAAEI,iBAHvB,CAIW,KAAK,CAAE,CAAC,CAACV,KAJpB,EAPJ,cAeI,oBAAC,UAAD,EAAY,KAAK,CAAE,CAAEY,QAAQ,CAAE,MAAZ,CAAoBC,SAAS,CAAE,MAA/B,CAAuCC,QAAQ,CAAE,MAAjD,CAAyDC,SAAS,CAAE,MAApE,CAAnB,CAAiG,OAAO,CAAEb,OAA1G,eACI,oBAAC,OAAD,MADJ,CAfJ,CADJ,CAyBH,CAnDM","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {IconButton, TextField} from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\ntype PropsType = {\n    callBack: (title: string) => void\n}\n\nexport const AddItemForm = (props: PropsType) => {\n\n    let [title, setTitle] = useState(\"\")\n    let [error, setError] = useState<string | null>(null)\n\n    const addTask = () => {\n        let newTitle = title.trim();\n        if (newTitle !== \"\") {\n            props.callBack(newTitle);\n            setTitle(\"\");\n        } else {\n            setError(\"Title is required\");\n        }\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        setError(null);\n        if (e.charCode === 13) {\n            addTask();\n        }\n    }\n\n    return (\n        <div>\n            {/*<input value={title}*/}\n            {/*       onChange={onChangeHandler}*/}\n            {/*       onKeyPress={onKeyPressHandler}*/}\n            {/*       className={error ? \"error\" : \"\"}*/}\n            {/*/>*/}\n\n            <TextField id=\"outlined-basic\" label={error} variant=\"outlined\" size={'small'}\n                       value={title}\n                       onChange={onChangeHandler}\n                       onKeyPress={onKeyPressHandler}\n                       error={!!error}\n            />\n\n            {/*backgroundColor: 'gray', opacity: 0.3,*/}\n            <IconButton style={{ maxWidth: '15px', maxHeight: '15px', minWidth: '15px', minHeight: '15px' }} onClick={addTask}>\n                <AddIcon/>\n            </IconButton>\n\n\n\n                {/*{error && <div className=\"error-message\">{error}</div>}*/}\n        </div>\n);\n};\n\n"]},"metadata":{},"sourceType":"module"}