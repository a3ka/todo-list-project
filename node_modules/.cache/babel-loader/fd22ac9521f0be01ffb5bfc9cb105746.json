{"ast":null,"code":"import _toConsumableArray from\"/home/aka/Documents/todo-list-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/aka/Documents/todo-list-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/home/aka/Documents/todo-list-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/aka/Documents/todo-list-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import{Todolist}from'./Todolist';import{v1}from'uuid';import{AddItemForm}from\"./components/AddItemForm\";import ButtonAppBar from\"./components/ButtonAppBar\";import{Container,Grid,Paper}from\"@material-ui/core\";function App(){var _useState5;var todolistId1=v1();var todolistId2=v1();var _useState=useState([{id:todolistId1,title:\"What to learn\",filter:\"all\"},{id:todolistId2,title:\"What to buy\",filter:\"all\"}]),_useState2=_slicedToArray(_useState,2),todolists=_useState2[0],setTodolists=_useState2[1];var _useState3=useState((_useState5={},_defineProperty(_useState5,todolistId1,[{id:v1(),title:\"HTML&CSS\",isDone:true},{id:v1(),title:\"JS\",isDone:true}]),_defineProperty(_useState5,todolistId2,[{id:v1(),title:\"Milk\",isDone:true},{id:v1(),title:\"React Book\",isDone:true}]),_useState5)),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];function removeTask(id,todolistId){//достанем нужный массив по todolistId:\nvar todolistTasks=tasks[todolistId];// перезапишем в этом объекте массив для нужного тудулиста отфилтрованным массивом:\ntasks[todolistId]=todolistTasks.filter(function(t){return t.id!==id;});// засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\nsetTasks(_objectSpread({},tasks));}function addTask(title,todolistId){var task={id:v1(),title:title,isDone:false};//достанем нужный массив по todolistId:\nvar todolistTasks=tasks[todolistId];// перезапишем в этом объекте массив для нужного тудулиста копией, добавив в начало новую таску:\ntasks[todolistId]=[task].concat(_toConsumableArray(todolistTasks));// засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\nsetTasks(_objectSpread({},tasks));}var updateTask=function updateTask(tId,id,newTitle){setTasks(_objectSpread({},tasks,_defineProperty({},tId,tasks[tId].map(function(el){return el.id===id?_objectSpread({},el,{title:newTitle}):el;}))));};function changeStatus(id,isDone,todolistId){//достанем нужный массив по todolistId:\nvar todolistTasks=tasks[todolistId];// найдём нужную таску:\nvar task=todolistTasks.find(function(t){return t.id===id;});//изменим таску, если она нашлась\nif(task){task.isDone=isDone;// засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\nsetTasks(_objectSpread({},tasks));}}function changeFilter(value,todolistId){var todolist=todolists.find(function(tl){return tl.id===todolistId;});if(todolist){todolist.filter=value;setTodolists(_toConsumableArray(todolists));}}function removeTodolist(id){// засунем в стейт список тудулистов, id которых не равны тому, который нужно выкинуть\nsetTodolists(todolists.filter(function(tl){return tl.id!==id;}));// удалим таски для этого тудулиста из второго стейта, где мы храним отдельно таски\ndelete tasks[id];// удаляем св-во из объекта... значением которого являлся массив тасок\n// засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\nsetTasks(_objectSpread({},tasks));}var addTodolist=function addTodolist(newTitle){var newId=v1();var newTodolist={id:newId,title:newTitle,filter:\"all\"};setTodolists([newTodolist].concat(_toConsumableArray(todolists)));setTasks(_objectSpread({},tasks,_defineProperty({},newId,[])));};var updateTodolistTitle=function updateTodolistTitle(newTitle,tId){// id: todolistId2, title: \"What to buy\", filter: \"all\"\nconsole.log(newTitle);};return/*#__PURE__*/ // <div className=\"App\">\nReact.createElement(\"div\",null,/*#__PURE__*/React.createElement(ButtonAppBar,null),/*#__PURE__*/React.createElement(Container,{fixed:true},/*#__PURE__*/React.createElement(Grid,{container:true,style:{padding:'20px'}},/*#__PURE__*/React.createElement(AddItemForm,{callBack:addTodolist})),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},todolists.map(function(tl){var allTodolistTasks=tasks[tl.id];var tasksForTodolist=allTodolistTasks;if(tl.filter===\"active\"){tasksForTodolist=allTodolistTasks.filter(function(t){return t.isDone===false;});}if(tl.filter===\"completed\"){tasksForTodolist=allTodolistTasks.filter(function(t){return t.isDone===true;});}return/*#__PURE__*/React.createElement(Grid,{item:true,key:tl.id},/*#__PURE__*/React.createElement(Paper,{style:{padding:\"20px\"},elevation:3},/*#__PURE__*/React.createElement(Todolist,{id:tl.id,title:tl.title,tasks:tasksForTodolist,removeTask:removeTask,changeFilter:changeFilter,addTask:addTask,updateTask:updateTask,updateTodolistTitle:updateTodolistTitle,changeTaskStatus:changeStatus,filter:tl.filter,removeTodolist:removeTodolist})));}))));}export default App;","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/App.tsx"],"names":["React","useState","Todolist","v1","AddItemForm","ButtonAppBar","Container","Grid","Paper","App","todolistId1","todolistId2","id","title","filter","todolists","setTodolists","isDone","tasks","setTasks","removeTask","todolistId","todolistTasks","t","addTask","task","updateTask","tId","newTitle","map","el","changeStatus","find","changeFilter","value","todolist","tl","removeTodolist","addTodolist","newId","newTodolist","updateTodolistTitle","console","log","padding","allTodolistTasks","tasksForTodolist"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from \"./components/AddItemForm\";\r\nimport ButtonAppBar from \"./components/ButtonAppBar\";\r\nimport {Container, Grid, Paper} from \"@material-ui/core\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\ntype TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction App() {\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<TodolistType>>([\r\n        {id: todolistId1, title: \"What to learn\", filter: \"all\"},\r\n        {id: todolistId2, title: \"What to buy\", filter: \"all\"}\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState<TasksStateType>({\r\n        [todolistId1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true}\r\n        ],\r\n        [todolistId2]: [\r\n            {id: v1(), title: \"Milk\", isDone: true},\r\n            {id: v1(), title: \"React Book\", isDone: true}\r\n        ]\r\n    });\r\n\r\n    function removeTask(id: string, todolistId: string) {\r\n        //достанем нужный массив по todolistId:\r\n        let todolistTasks = tasks[todolistId];\r\n        // перезапишем в этом объекте массив для нужного тудулиста отфилтрованным массивом:\r\n        tasks[todolistId] = todolistTasks.filter(t => t.id !== id);\r\n        // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n        setTasks({...tasks});\r\n    }\r\n\r\n    function addTask(title: string, todolistId: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        //достанем нужный массив по todolistId:\r\n        let todolistTasks = tasks[todolistId];\r\n        // перезапишем в этом объекте массив для нужного тудулиста копией, добавив в начало новую таску:\r\n        tasks[todolistId] = [task, ...todolistTasks];\r\n        // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n        setTasks({...tasks});\r\n    }\r\n\r\n    const updateTask = (tId: string, id: string, newTitle: string) => {\r\n        setTasks({...tasks, [tId]: tasks[tId].map(el => el.id === id ? {...el, title: newTitle} : el)})\r\n    }\r\n\r\n    function changeStatus(id: string, isDone: boolean, todolistId: string) {\r\n        //достанем нужный массив по todolistId:\r\n        let todolistTasks = tasks[todolistId];\r\n        // найдём нужную таску:\r\n        let task = todolistTasks.find(t => t.id === id);\r\n        //изменим таску, если она нашлась\r\n        if (task) {\r\n            task.isDone = isDone;\r\n            // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n            setTasks({...tasks});\r\n        }\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType, todolistId: string) {\r\n        let todolist = todolists.find(tl => tl.id === todolistId);\r\n        if (todolist) {\r\n            todolist.filter = value;\r\n            setTodolists([...todolists])\r\n        }\r\n    }\r\n\r\n    function removeTodolist(id: string) {\r\n        // засунем в стейт список тудулистов, id которых не равны тому, который нужно выкинуть\r\n        setTodolists(todolists.filter(tl => tl.id !== id));\r\n        // удалим таски для этого тудулиста из второго стейта, где мы храним отдельно таски\r\n        delete tasks[id]; // удаляем св-во из объекта... значением которого являлся массив тасок\r\n        // засетаем в стейт копию объекта, чтобы React отреагировал перерисовкой\r\n        setTasks({...tasks});\r\n    }\r\n\r\n    const addTodolist = (newTitle: string) => {\r\n        let newId = v1()\r\n        let newTodolist: TodolistType = {id: newId, title: newTitle, filter: \"all\"}\r\n        setTodolists([newTodolist, ...todolists])\r\n        setTasks({...tasks, [newId]: []})\r\n    }\r\n\r\n    const updateTodolistTitle = (newTitle: string, tId: string) => {\r\n        // id: todolistId2, title: \"What to buy\", filter: \"all\"\r\n        console.log(newTitle)\r\n    }\r\n\r\n    return (\r\n        // <div className=\"App\">\r\n        <div>\r\n            <ButtonAppBar/>\r\n            <Container fixed>\r\n                <Grid container style={{padding: '20px'}}>\r\n                    <AddItemForm callBack={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n                            let tasksForTodolist = allTodolistTasks;\r\n\r\n                            if (tl.filter === \"active\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false);\r\n                            }\r\n                            if (tl.filter === \"completed\") {\r\n                                tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true);\r\n                            }\r\n\r\n                            return <Grid item key={tl.id}>\r\n                                <Paper style={{padding: \"20px\"}} elevation={3}>\r\n                                    <Todolist\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={tasksForTodolist}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        updateTask={updateTask}\r\n                                        updateTodolistTitle={updateTodolistTitle}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>;\r\n                        })\r\n                        }\r\n                        </Grid>\r\n                        </Container>\r\n                        </div>\r\n                        )\r\n                        ;\r\n                    }\r\n\r\n                    export default App;\r\n"]},"metadata":{},"sourceType":"module"}