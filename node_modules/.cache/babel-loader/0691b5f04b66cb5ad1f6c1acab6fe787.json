{"ast":null,"code":"import _slicedToArray from\"/home/aka/Documents/todo-list-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{TextField}from\"@material-ui/core\";export var EditTableSpan=function EditTableSpan(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var _useState3=useState(props.oldTitle),_useState4=_slicedToArray(_useState3,2),newTitle=_useState4[0],setNewTitle=_useState4[1];var onDoubleClickHandler=function onDoubleClickHandler(){setEdit(true);};var onBlurHandler=function onBlurHandler(){props.callBack(newTitle);setEdit(false);};var onChangeHandler=function onChangeHandler(e){setNewTitle(e.currentTarget.value);};return edit// ? <input value={newTitle} onChange={onChangeHandler} autoFocus={true} onBlur={onBlurHandler}/>\n// ? <TextField id=\"standard-basic\" label=\"Input new title\" onChange={onChangeHandler} autoFocus={true} onBlur={onBlurHandler}/>\n?/*#__PURE__*/React.createElement(TextField,{id:\"filled-basic\",label:\"New Title\",variant:\"filled\",size:'small',onChange:onChangeHandler,autoFocus:true,onBlur:onBlurHandler}):/*#__PURE__*/React.createElement(\"span\",{onDoubleClick:onDoubleClickHandler},newTitle);};","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/components/EditTableSpan.tsx"],"names":["React","useState","TextField","EditTableSpan","props","edit","setEdit","oldTitle","newTitle","setNewTitle","onDoubleClickHandler","onBlurHandler","callBack","onChangeHandler","e","currentTarget","value"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAA4BC,QAA5B,KAA2C,OAA3C,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CAOA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAA8B,eAE/BH,QAAQ,CAAC,KAAD,CAFuB,wCAEhDI,IAFgD,eAE1CC,OAF0C,8BAGvBL,QAAQ,CAACG,KAAK,CAACG,QAAP,CAHe,yCAGhDC,QAHgD,eAGtCC,WAHsC,eAKvD,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAC/BJ,OAAO,CAAC,IAAD,CAAP,CACH,CAFD,CAIA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBP,KAAK,CAACQ,QAAN,CAAeJ,QAAf,EACAF,OAAO,CAAC,KAAD,CAAP,CACH,CAHD,CAKA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAsC,CAC1DL,WAAW,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX,CACH,CAFD,CAIA,MACIX,CAAAA,IACI;AACA;AAFA,cAGE,oBAAC,SAAD,EAAW,EAAE,CAAC,cAAd,CAA6B,KAAK,CAAC,WAAnC,CAA+C,OAAO,CAAC,QAAvD,CAAgE,IAAI,CAAE,OAAtE,CAA+E,QAAQ,CAAEQ,eAAzF,CAA0G,SAAS,CAAE,IAArH,CAA2H,MAAM,CAAEF,aAAnI,EAHF,cAIE,4BAAM,aAAa,CAAED,oBAArB,EAA4CF,QAA5C,CALV,CAOH,CAzBM","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport {TextField} from \"@material-ui/core\";\n\ntype EditTableSpanType = {\n    oldTitle: string\n    callBack: (title:string) => void\n}\n\nexport const EditTableSpan = (props: EditTableSpanType) => {\n\n    const [edit, setEdit] = useState(false)\n    const [newTitle, setNewTitle] = useState(props.oldTitle)\n\n    const onDoubleClickHandler = () => {\n        setEdit(true)\n    }\n\n    const onBlurHandler = () => {\n        props.callBack(newTitle)\n        setEdit(false)\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewTitle(e.currentTarget.value)\n    }\n\n    return (\n        edit\n            // ? <input value={newTitle} onChange={onChangeHandler} autoFocus={true} onBlur={onBlurHandler}/>\n            // ? <TextField id=\"standard-basic\" label=\"Input new title\" onChange={onChangeHandler} autoFocus={true} onBlur={onBlurHandler}/>\n            ? <TextField id=\"filled-basic\" label=\"New Title\" variant=\"filled\" size={'small'} onChange={onChangeHandler} autoFocus={true} onBlur={onBlurHandler}/>\n            : <span onDoubleClick={onDoubleClickHandler}>{newTitle}</span>\n    );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}