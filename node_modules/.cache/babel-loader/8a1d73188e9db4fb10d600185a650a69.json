{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/todo-list-project/src/components/AddItemForm.tsx\";\nimport React, { useState } from 'react';\nexport const AddItemForm = props => {\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n\n  const addTask = () => {\n    let newTitle = title.trim();\n\n    if (newTitle !== \"\") {\n      props.addTask(newTitle, props.todolistId);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    setError(null);\n\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    className: error ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"+\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, error));\n};","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/components/AddItemForm.tsx"],"names":["React","useState","AddItemForm","props","title","setTitle","error","setError","addTask","newTitle","trim","todolistId","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode"],"mappings":";AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AAMA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAsB;AAE7C,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAgB,IAAhB,CAAhC;;AAEA,QAAMO,OAAO,GAAG,MAAM;AAClB,QAAIC,QAAQ,GAAGL,KAAK,CAACM,IAAN,EAAf;;AACA,QAAID,QAAQ,KAAK,EAAjB,EAAqB;AACjBN,MAAAA,KAAK,CAACK,OAAN,CAAcC,QAAd,EAAwBN,KAAK,CAACQ,UAA9B;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACH;AACJ,GARD;;AAUA,QAAMK,eAAe,GAAIC,CAAD,IAAsC;AAC1DR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAwC;AAC9DN,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAIM,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBT,MAAAA,OAAO;AACV;AACJ,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAEJ,KAAd;AACO,IAAA,QAAQ,EAAEQ,eADjB;AAEO,IAAA,UAAU,EAAEI,iBAFnB;AAGO,IAAA,SAAS,EAAEV,KAAK,GAAG,OAAH,GAAa,EAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANJ,EAOKF,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,KAAhC,CAPd,CADJ;AAWH,CArCM","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\n\ntype PropsType = {\n    callBack: (title: string)=>void\n}\n\nexport const AddItemForm = (props: PropsType) => {\n\n    let [title, setTitle] = useState(\"\")\n    let [error, setError] = useState<string | null>(null)\n\n    const addTask = () => {\n        let newTitle = title.trim();\n        if (newTitle !== \"\") {\n            props.addTask(newTitle, props.todolistId);\n            setTitle(\"\");\n        } else {\n            setError(\"Title is required\");\n        }\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        setError(null);\n        if (e.charCode === 13) {\n            addTask();\n        }\n    }\n\n    return (\n        <div>\n            <input value={title}\n                   onChange={onChangeHandler}\n                   onKeyPress={onKeyPressHandler}\n                   className={error ? \"error\" : \"\"}\n            />\n            <button onClick={addTask}>+</button>\n            {error && <div className=\"error-message\">{error}</div>}\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}