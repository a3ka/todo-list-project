{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/todo-list-project/src/Todolist.tsx\";\nimport React, { useState } from 'react';\nimport style from './Todolist.module.css';\nexport function Todolist(props) {\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n\n  const addTask = () => {\n    if (title.trim() !== '') {\n      props.addTask(title.trim());\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n    setError(null);\n  };\n\n  const onKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n\n  const onAllClickHandler = () => props.changeFilter(\"all\");\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\");\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\");\n\n  const checkBoxHandler = (currentID, currentEvent) => {\n    props.changeStatusCheckbox(currentID, currentEvent);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: error ? style.error : '',\n    value: title,\n    onChange: onChangeHandler,\n    onKeyPress: onKeyPressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"+\")), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \" \", error), \" \", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id);\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? style.isDone : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: t.isDone,\n      onChange: event => checkBoxHandler(t.id, event.currentTarget.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'all' ? style.activeFilter : '',\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'active' ? style.activeFilter : '',\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'completed' ? style.activeFilter : '',\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/Todolist.tsx"],"names":["React","useState","style","Todolist","props","title","setTitle","error","setError","addTask","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","checkBoxHandler","currentID","currentEvent","changeStatusCheckbox","errorMessage","tasks","map","t","onClickHandler","removeTask","id","isDone","event","checked","filter","activeFilter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport style from './Todolist.module.css';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    // removeTodolist: (todolistId: string) => void\r\n    changeStatusCheckbox: (currentID: string, eventStatus: boolean) => void\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addTask = () => {\r\n        if (title.trim() !== '') {\r\n            props.addTask(title.trim());\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\");\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\");\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\");\r\n\r\n    const checkBoxHandler = (currentID: string, currentEvent: boolean) => {\r\n        props.changeStatusCheckbox(currentID, currentEvent)\r\n    }\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input className={error ? style.error : ''}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n        </div>\r\n        {error && <div className={style.errorMessage}> {error}</div>} {/*!!!!!!!!*/}\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n\r\n                    const onClickHandler = () => props.removeTask(t.id)\r\n\r\n                    return <li key={t.id} className={t.isDone ? style.isDone : ''}>\r\n                        <input type=\"checkbox\" checked={t.isDone}\r\n                               onChange={(event) => checkBoxHandler(t.id, event.currentTarget.checked)}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === 'all' ? style.activeFilter : ''} onClick={onAllClickHandler}>All\r\n            </button>\r\n            <button className={props.filter === 'active' ? style.activeFilter : ''}\r\n                    onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === 'completed' ? style.activeFilter : ''}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}