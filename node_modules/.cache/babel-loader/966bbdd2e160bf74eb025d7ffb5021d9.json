{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/todo-list-project/src/Todolist.tsx\";\nimport React from 'react';\nimport { AddItemForm } from \"./components/AddItemForm\";\nexport function Todolist(props) {\n  // let [title, setTitle] = useState(\"\")\n  // let [error, setError] = useState<string | null>(null)\n  //\n  // const addTask = () => {\n  //     let newTitle = title.trim();\n  //     if (newTitle !== \"\") {\n  //         props.addTask(newTitle, props.id);\n  //         setTitle(\"\");\n  //     } else {\n  //         setError(\"Title is required\");\n  //     }\n  // }\n  //\n  // const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n  //     setTitle(e.currentTarget.value)\n  // }\n  //\n  // const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n  //     setError(null);\n  //     if (e.charCode === 13) {\n  //         addTask();\n  //     }\n  // }\n  const removeTodolist = () => props.removeTodolist(props.id);\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\n\n  const addTaskHandler = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \" \", props.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: removeTodolist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(AddItemForm, {\n    callBack: addTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    const onClickHandler = () => props.removeTask(t.id, props.id);\n\n    const onChangeHandler = e => {\n      let newIsDoneValue = e.currentTarget.checked;\n      props.changeTaskStatus(t.id, newIsDoneValue, props.id);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? \"is-done\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: t.isDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, t.title), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"x\"));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'all' ? \"active-filter\" : \"\",\n    onClick: onAllClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'active' ? \"active-filter\" : \"\",\n    onClick: onActiveClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.filter === 'completed' ? \"active-filter\" : \"\",\n    onClick: onCompletedClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Completed\")));\n}","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/Todolist.tsx"],"names":["React","AddItemForm","Todolist","props","removeTodolist","id","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","addTaskHandler","title","tasks","map","t","onClickHandler","removeTask","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","isDone","filter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {AddItemForm} from \"./components/AddItemForm\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n    // let [title, setTitle] = useState(\"\")\r\n    // let [error, setError] = useState<string | null>(null)\r\n    //\r\n    // const addTask = () => {\r\n    //     let newTitle = title.trim();\r\n    //     if (newTitle !== \"\") {\r\n    //         props.addTask(newTitle, props.id);\r\n    //         setTitle(\"\");\r\n    //     } else {\r\n    //         setError(\"Title is required\");\r\n    //     }\r\n    // }\r\n    //\r\n    // const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     setTitle(e.currentTarget.value)\r\n    // }\r\n    //\r\n    // const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    //     setError(null);\r\n    //     if (e.charCode === 13) {\r\n    //         addTask();\r\n    //     }\r\n    // }\r\n\r\n    const removeTodolist = () => props.removeTodolist(props.id)\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\r\n\r\n    const addTaskHandler = () => {\r\n\r\n    }\r\n\r\n    return <div>\r\n        <h3> {props.title}\r\n            <button onClick={removeTodolist}>x</button>\r\n        </h3>\r\n\r\n        <AddItemForm callBack={addTaskHandler} />\r\n        {/*<div>*/}\r\n        {/*    <input value={title}*/}\r\n        {/*           onChange={onChangeHandler}*/}\r\n        {/*           onKeyPress={onKeyPressHandler}*/}\r\n        {/*           className={error ? \"error\" : \"\"}*/}\r\n        {/*    />*/}\r\n        {/*    <button onClick={addTask}>+</button>*/}\r\n        {/*    {error && <div className=\"error-message\">{error}</div>}*/}\r\n        {/*</div>*/}\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.id)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.id);\r\n                    }\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === 'all' ? \"active-filter\" : \"\"}\r\n                    onClick={onAllClickHandler}>All\r\n            </button>\r\n            <button className={props.filter === 'active' ? \"active-filter\" : \"\"}\r\n                    onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === 'completed' ? \"active-filter\" : \"\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}