{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/ToDoList/todolist/src/Todolist.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from \"./components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n\n  let [title, setTitle] = useState(\"\");\n\n  const addTask = () => {\n    props.addTask(title);\n    setTitle(\"\");\n  };\n\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  const onKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addTask();\n    }\n  }; // const onAllClickHandler=()=>{\n  //     props.changeFilter('all')\n  // }\n  //\n  // const onActiveClickHandler=()=>{\n  //     props.changeFilter('active')\n  // }\n\n\n  const changeFilterHandler = FilterValues => {\n    props.changeFilter(FilterValues);\n  };\n\n  const onClickHandler = tID => {\n    props.removeTask(tID);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: onChangeHandler,\n        onKeyPress: onKeyPressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: '+',\n        callBack: () => addTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        // const onClickHandler=()=>{\n        //     props.removeTask(t.id)\n        // }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClickHandler(t.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        name: 'All',\n        callBack: () => changeFilterHandler('all')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeFilterHandler('active'),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeFilterHandler('completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Todolist, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n\n_c = Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/home/aka/Documents/ToDoList/todolist/src/Todolist.tsx"],"names":["React","useState","Button","Todolist","props","title","setTitle","addTask","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","changeFilterHandler","FilterValues","changeFilter","onClickHandler","tID","removeTask","tasks","map","t","isDone","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2CC,QAA3C,QAA0D,OAA1D;AAEA,SAAQC,MAAR,QAAqB,qBAArB;;AAgBA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAoC;AAAA;;AAEvC,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,OAAO,GAAG,MAAM;AAClBH,IAAAA,KAAK,CAACG,OAAN,CAAcF,KAAd;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAHD;;AAKA,QAAME,eAAe,GAAIC,CAAD,IAAsC;AAC1DH,IAAAA,QAAQ,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,CAAD,IAAwC;AAC9D,QAAIA,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBN,MAAAA,OAAO;AACV;AACJ,GAJD,CAbuC,CAmBvC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,mBAAmB,GAAIC,YAAD,IAAoC;AAC5DX,IAAAA,KAAK,CAACY,YAAN,CAAmBD,YAAnB;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIC,GAAD,IAAiB;AACpCd,IAAAA,KAAK,CAACe,UAAN,CAAiBD,GAAjB;AACH,GAFD;;AAIA,sBAAO;AAAA,4BACH;AAAA,gBAAKd,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEA,KAAd;AACO,QAAA,QAAQ,EAAEG,eADjB;AAEO,QAAA,UAAU,EAAEI;AAFnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,GAAd;AAAmB,QAAA,QAAQ,EAAE,MAAML,OAAO;AAA1C;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAUH;AAAA,gBAEQH,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAI;AACjB;AACA;AACA;AAEA,4BAAO;AAAA,kCACH;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEA,CAAC,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAA,sBAAOD,CAAC,CAACjB;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFG,eAGH;AAAQ,YAAA,OAAO,EAAE,MAAMY,cAAc,CAACK,CAAC,CAACE,EAAH,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHG;AAAA,WAASF,CAAC,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OAVD;AAFR;AAAA;AAAA;AAAA;AAAA,YAVG,eAyBH;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAd;AAAqB,QAAA,QAAQ,EAAE,MAAMV,mBAAmB,CAAC,KAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMA,mBAAmB,CAAC,QAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMA,mBAAmB,CAAC,WAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAqCH;;GAxEeX,Q;;KAAAA,Q","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {Button} from \"./components/Button\";\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (value: FilterValuesType) => void\r\n    addTask: (title: string) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n\r\n    const addTask = () => {\r\n        props.addTask(title);\r\n        setTitle(\"\");\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    // const onAllClickHandler=()=>{\r\n    //     props.changeFilter('all')\r\n    // }\r\n    //\r\n    // const onActiveClickHandler=()=>{\r\n    //     props.changeFilter('active')\r\n    // }\r\n\r\n    const changeFilterHandler = (FilterValues: FilterValuesType) => {\r\n        props.changeFilter(FilterValues)\r\n    }\r\n\r\n    const onClickHandler = (tID: string) => {\r\n        props.removeTask(tID)\r\n    }\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <Button name={'+'} callBack={() => addTask()}/>\r\n            {/*<button onClick={addTask}>+</button>*/}\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    // const onClickHandler=()=>{\r\n                    //     props.removeTask(t.id)\r\n                    // }\r\n\r\n                    return <li key={t.id}>\r\n                        <input type=\"checkbox\" checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={() => onClickHandler(t.id)}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <Button name={'All'} callBack={() => changeFilterHandler('all')}/>\r\n            <button onClick={() => changeFilterHandler('active')}>Active</button>\r\n            <button onClick={() => changeFilterHandler('completed')}>Completed</button>\r\n\r\n            {/*<button onClick={ onAllClickHandler }>All</button>*/}\r\n            {/*<button onClick={ onActiveClickHandler }>Active</button>*/}\r\n            {/*<button onClick={ onCompletedClickHandler }>Completed</button>*/}\r\n\r\n            {/*<button onClick={ ()=>{props.changeFilter('completed')} }>Completed</button>*/}\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}