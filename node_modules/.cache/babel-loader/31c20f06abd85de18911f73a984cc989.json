{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/ToDoList/todolist/src/Todolist.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n\n  // let [valueButton, setValueButton] = useState('All')\n  //\n  // const tasksFilter = (filterValue: string) => {\n  //     setValueButton(filterValue)\n  // }\n  //\n  // let prokladka = props.tasks\n  // if (valueButton === \"Active\") {\n  //     prokladka = props.tasks.filter(el => !el.isDone)\n  // }\n  // if (valueButton === \"Completed\") {\n  //     prokladka = props.tasks.filter(el => el.isDone)\n  // }\n  let [newTitle, setNewTitle] = useState('');\n\n  const addTaskHandler = () => {\n    props.addTask(newTitle);\n    setNewTitle('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: true,\n        onChange: event => setNewTitle(event.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTaskHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.removeTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: el.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.tasksFilter(\"All\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.tasksFilter(\"Active\"),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.tasksFilter('Completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Todolist, \"yDL3i1zGI9aikOUmkxVbx2jwqbI=\");\n\n_c = Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/home/aka/Documents/ToDoList/todolist/src/Todolist.tsx"],"names":["React","useState","Todolist","props","newTitle","setNewTitle","addTaskHandler","addTask","title","event","currentTarget","value","tasks","map","el","removeTask","id","isDone","tasksFilter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAiBA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAoC;AAAA;;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMK,cAAc,GAAG,MAAM;AACzBH,IAAAA,KAAK,CAACI,OAAN,CAAcH,QAAd;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAHD;;AAKA,sBAAO;AAAA,4BACH;AAAA,gBAAKF,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,8BACI;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,QAAQ,EAAGC,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAEL,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAQH;AAAA,gBACKH,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAiBC,EAAD,IAAQ;AACrB,4BACI;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAE,MAAMX,KAAK,CAACY,UAAN,CAAiBD,EAAE,CAACE,EAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,EAAEF,EAAE,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAOH,EAAE,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASM,EAAE,CAACE,EAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YARG,eAmBH;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACe,WAAN,CAAkB,KAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMf,KAAK,CAACe,WAAN,CAAkB,QAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMf,KAAK,CAACe,WAAN,CAAkB,WAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBH;;GA9CehB,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react';\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (id: string) => void\r\n    tasksFilter: (filterValue: string) => void\r\n    addTask: (newTitle: string) => void\r\n}\r\n\r\n\r\nexport function Todolist(props: PropsType) {\r\n    // let [valueButton, setValueButton] = useState('All')\r\n    //\r\n    // const tasksFilter = (filterValue: string) => {\r\n    //     setValueButton(filterValue)\r\n    // }\r\n    //\r\n    // let prokladka = props.tasks\r\n    // if (valueButton === \"Active\") {\r\n    //     prokladka = props.tasks.filter(el => !el.isDone)\r\n    // }\r\n    // if (valueButton === \"Completed\") {\r\n    //     prokladka = props.tasks.filter(el => el.isDone)\r\n    // }\r\n    let [newTitle, setNewTitle] = useState('')\r\n\r\n    const addTaskHandler = () => {\r\n        props.addTask(newTitle)\r\n        setNewTitle('')\r\n    }\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input value onChange={(event) => setNewTitle(event.currentTarget.value)}/>\r\n\r\n            {/*<input onChange={(event) => setNewTitle(event.currentTarget.value)}/>*/}\r\n            <button onClick={addTaskHandler}>+</button>\r\n        </div>\r\n        <ul>\r\n            {props.tasks.map((el) => {\r\n                return (\r\n                    <li key={el.id}>\r\n                        <button onClick={() => props.removeTask(el.id)}>X</button>\r\n                        <input type=\"checkbox\" checked={el.isDone}/>\r\n                        <span>{el.title}</span>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>\r\n            <button onClick={() => props.tasksFilter(\"All\")}>All</button>\r\n            <button onClick={() => props.tasksFilter(\"Active\")}>Active</button>\r\n            <button onClick={() => props.tasksFilter('Completed')}>Completed</button>\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}