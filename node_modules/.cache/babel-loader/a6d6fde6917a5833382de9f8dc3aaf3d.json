{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/todo-list-project/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\n\nfunction App() {\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id !== id);\n    setTasks(filteredTasks);\n  }\n\n  function addTask(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n\n  const changeStatusCheckbox = (currentID, eventStatus) => {\n    setTasks(tasks.map(el => el.id === currentID ? { ...el,\n      isDone: eventStatus\n    } : el));\n  };\n\n  let [filter, setFilter] = useState(\"all\");\n  let tasksForTodolist = tasks;\n\n  if (filter === \"active\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === false);\n  }\n\n  if (filter === \"completed\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === true);\n  }\n\n  function changeFilter(value) {\n    setFilter(value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Todolist, {\n    title: \"What to learn\",\n    tasks: tasksForTodolist,\n    removeTask: removeTask,\n    changeFilter: changeFilter,\n    addTask: addTask,\n    changeStatusCheckbox: changeStatusCheckbox,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aka/Documents/todo-list-project/src/App.tsx"],"names":["React","useState","Todolist","v1","App","tasks","setTasks","id","title","isDone","removeTask","filteredTasks","filter","t","addTask","task","newTasks","changeStatusCheckbox","currentID","eventStatus","map","el","setFilter","tasksForTodolist","changeFilter","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"ReactJS\", isDone: false},\r\n        {id: v1(), title: \"Rest API\", isDone: false},\r\n        {id: v1(), title: \"GraphQL\", isDone: false},\r\n    ]);\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id !== id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    const changeStatusCheckbox = (currentID: string, eventStatus: boolean) => {\r\n        setTasks(tasks.map((el) => el.id === currentID ? {...el, isDone: eventStatus} : el))\r\n\r\n    }\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let tasksForTodolist = tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\"\r\n                      tasks={tasksForTodolist}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTask={addTask}\r\n                      changeStatusCheckbox={changeStatusCheckbox}\r\n                      filter={filter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}